# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

[ -z "$PS1" ] && return
PROMPT_COMMAND="git-prompt"
PS1="[\u@\h \W] \$ "

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

du () {
  local args="$@"

  du $args | sort -h
}

# Create passwords
genpw () {
  if [[ "${args}" == "human" ]]
  then
    pwgen -cny 12
  elif [[ "${args}" == "mysql" ]]
  then
    pwgen -cns 16
  elif [[ "${args}" == "machine" ]]
  then
    pwgen -cnsy 16
  fi
}

# Check for tmux; make sure we're not in screen, 
# and then replace the bash shell with tmux
#if command -v tmux>/dev/null
#then
#  [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && exec tmux
#fi

# Some fun git aliases
git-rm-secret () {
  local secret_file="${1}"
  git filter-branch \
      --force \
      --index-filter "git rm --cached --ignore-unmatch ${secret_file}" \
      --prune-empty \
      --tag-name-filter cat -- \
      --all

  echo "Don't forget to run: `git push origin --force --all`"
  echo '...and perhaps we should add the sensitive file to our .gitignore, should we not?'
}

git () {
  if [[ $@ == "init" ]] && lolcommits -v
  then
    command git init && lolcommits --enable
  elif [[ $@ == "log" ]]
  then
    command git log \
                --graph \
                --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
                --abbrev-commit
  else
    command git "$@"
  fi
}

alias such=git
alias very=git
alias wow='git status'

# Setup ssh stuffs
agent_007 () {
  local key="${HOME}/.ssh/id_ed25519"
  ssh-agent \
  && ssh-add $key
}

# Things for ruby
export PATH="$PATH:$HOME/.rbenv/bin"
export PATH="$PATH:$HOME/.rbenv/plugins/ruby-build/bin"
eval "$(rbenv init -)"
